# Description: CloudFormation template for AWS GitOps Vanilla
#
# Parameters:
#   - RepositoryName: Name of the CodeCommit repository
#   - S3Bucket: Name of the S3 bucket containing the zip file
#   - S3Key: Path to the zip file in the S3 bucket
#   - CodeBuildCustomImage: Name of the custom CodeBuild image
#
# Resources:
#   - CodeCommitRepository: AWS CodeCommit repository for CloudFormation templates
#   - CodeBuildPRValidate: AWS CodeBuild project for building CloudFormation templates
#   - CodeBuildDeployProject: AWS CodeBuild project for deploying CloudFormation templates
#   - CodeBuildServiceRole: IAM role for CodeBuild project
#   - CloudWatchEventRulePRValidate: CloudWatch Events rule for triggering build on CodeCommit pull request state change
#   - CloudWatchEventRuleDeploy: CloudWatch Events rule for triggering deploy on CodeCommit pull request status change
#   - CloudWatchEventsRole: IAM role for CloudWatch Events rule
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  RepositoryName:
    Type: String
    Description: Name of the CodeCommit repository
    Default: cloudformation-templates
  S3Bucket:
    Type: String
    Description: Name of the S3 bucket containing the zip file
    Default: codecommit-repositories
  S3Key:
    Type: String
    Description: Path to the zip file in the S3 bucket
    Default: Repositories/cloudformation-templates.zip
  CodeBuildCustomImage:
    Type: String
    Description: Name of the custom CodeBuild image
    Default: aws/codebuild/amazonlinux2-x86_64-standard:5.0

Resources:
  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: Repository for CloudFormation templates
      Code:
        S3:
          Bucket: !Ref S3Bucket
          Key: !Ref S3Key
        BranchName: main

  CodeBuildPRValidate:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-prvalidate
      Description: CodeBuild project for validating CloudFormation templates
      BadgeEnabled: true
      Source:
        Type: CODECOMMIT
        Location: !Sub https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepositoryName}
        GitCloneDepth: 0
        BuildSpec: cloudformation/resources/codebuild/buildspec_validate.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildCustomImage
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 20
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub /aws/codebuild/${RepositoryName}-prvalidate

  CodeBuildDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${RepositoryName}-deploy
      Description: CodeBuild project for deploying CloudFormation templates
      BadgeEnabled: true
      Source:
        Type: CODECOMMIT
        Location: !Sub https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepositoryName}
        GitCloneDepth: 0
        BuildSpec: cloudformation/resources/codebuild/buildspec_deploy.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildCustomImage
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 20
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub /aws/codebuild/${RepositoryName}-deploy

  CodeBuildServiceRole:
    # checkov:skip=CKV_AWS_108: ADD REASON
    # checkov:skip=CKV_AWS_111: ADD REASON
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - codecommit:*
                  - codebuild:*
                  - cloudformation:*
                  - events:EnableRule
                  - events:DisableRule
                Resource:
                  - '*'
                Condition:
                  StringNotLike:
                    aws:CalledVia: cloudformation.amazonaws.com

  CloudWatchEventRulePRValidate:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${RepositoryName}-prvalidate
      Description: Trigger validation CodeBuild on CodeCommit pull request state change
      State: ENABLED
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Pull Request State Change
        resources:
          - !GetAtt CodeCommitRepository.Arn
        detail:
          event:
            - pullRequestCreated
            - pullRequestSourceBranchUpdated
      Targets:
        - Arn: !GetAtt CodeBuildPRValidate.Arn
          Id: TargetFunctionBuild
          RoleArn: !GetAtt CloudWatchEventsRole.Arn
          InputTransformer:
            InputTemplate: |
              {
                "sourceVersion": <sourceVersion>,
                "environmentVariablesOverride": [
                   {
                       "name": "CI_PULL_REQUEST_ID",
                       "value": <pullRequestId>,
                       "type": "PLAINTEXT"
                   },
                   {
                       "name": "CI_REPOSITORY_NAME",
                       "value": <repositoryName>,
                       "type": "PLAINTEXT"
                   },
                   {
                       "name": "CI_SOURCE_COMMIT",
                       "value": <sourceCommit>,
                       "type": "PLAINTEXT"
                   },
                   {
                       "name": "CI_DESTINATION_COMMIT",
                       "value": <destinationCommit>,
                       "type": "PLAINTEXT"
                   }
                ]
              }
            InputPathsMap:
              sourceVersion: $.detail.sourceCommit
              pullRequestId: $.detail.pullRequestId
              repositoryName: $.detail.repositoryNames[0]
              sourceCommit: $.detail.sourceCommit
              destinationCommit: $.detail.destinationCommit

  CloudWatchEventRuleDeploy:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${RepositoryName}-deploy
      Description: Trigger deploy CodeBuild on CodeCommit push to main branch
      State: ENABLED
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt CodeCommitRepository.Arn
        detail:
          event:
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        - Arn: !GetAtt CodeBuildDeploy.Arn
          Id: TargetFunctionDeploy
          RoleArn: !GetAtt CloudWatchEventsRole.Arn

  CloudWatchEventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchEventsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: !Ref AWS::Region
